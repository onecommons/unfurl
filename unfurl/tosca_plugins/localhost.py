# Generated by tosca.yaml2python from unfurl/tosca_plugins/localhost.yaml at 2025-02-08T12:42:28 overwrite not modified (change to "overwrite ok" to allow)

import unfurl
from typing import List, Dict, Any, Tuple, Union, Sequence
import tosca
from tosca import Attribute, Capability, Eval, Node, operation
import unfurl.configurators.ansible


class unfurl_nodes_Localhost(tosca.nodes.Compute):  # type: ignore[override]  # ('os',)
    _type_name = "unfurl.nodes.Localhost"
    architecture: str = Attribute()
    type: str = Attribute()
    os_distribution: str = Attribute()
    os_version: str = Attribute()

    os: "tosca.capabilities.OperatingSystem" = Capability(
        factory=tosca.capabilities.OperatingSystem
    )

    @operation(
        apply_to=["Install.check", "Standard.configure"], outputs={"localhost": None}
    )
    def default(self, **kw: Any) -> Any:
        return unfurl.configurators.ansible.AnsibleConfigurator(
            playbook=Eval(
                {
                    "q": [
                        {
                            "hosts": "localhost",
                            "connection": "local",
                            "gather_facts": False,
                            "tasks": [
                                {
                                    "name": "gather subset",
                                    "ansible.builtin.setup": {"gather_subset": ["min"]},
                                },
                                {
                                    "set_fact": {
                                        "localhost": "{{ "
                                        "hostvars['localhost'].ansible_facts "
                                        "}}"
                                    }
                                },
                            ],
                        }
                    ]
                }
            ),
            resultTemplate=Eval(
                {
                    "attributes": {
                        "architecture": "{{ outputs.localhost.architecture }}",
                        "os_type": "{{ outputs.localhost.os_family }}",
                        "os_distribution": "{{ outputs.localhost.distribution }}",
                        "os_version": "{{ outputs.localhost.distribution_version }}",
                        "package_manager": "{{ outputs.localhost.pkg_mgr }}",
                    },
                    "readyState": "ok",
                }
            ),
        )


__all__ = ["unfurl_nodes_Localhost"]

