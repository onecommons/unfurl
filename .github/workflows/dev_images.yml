name: Build images for GHCR
on: [push]
env:
  # NOTE keep versions in sync with on_push.yml and version in TOSCA templates
  TERRAFORM_VERSION: 1.1.4 # sync with tosca_plugins/artifacts.yaml
  HELM_VERSION: 3.7.1 # sync with configurators/helm-template.yaml
  GCLOUD_VERSION: 499.0.0 # sync with tosca_plugins/artifacts.yaml and Dockerfile
  KOMPOSE_VERSION: v1.26.1 # sync with Dockerfile
  KUBECTL_VERSION: v1.24.2
  K3D_VERSION: v4.4.6

jobs:
  publish_ghcr:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch repo
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Log in to registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1 # 65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175 # v4
        with:
          images: |
            ghcr.io/onecommons/unfurl
          # commit sha, branch name, tag name, latest on main
          tags: |
            type=sha,prefix=
            type=ref,event=branch
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@885d1462b80bc1c1c7f0b00334ad271f09369c55 # v2

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@0a97817b6ade9f46837855d676c4cca3a2471fc9 # v4
        with:
          context: ./
          file: ./docker/Dockerfile
          push: true
          build-args: |
            HELM_VERSION=${{ env.HELM_VERSION }}
            TERRAFORM_VERSION=${{ env.TERRAFORM_VERSION }}
            GCLOUD_VERSION=${{ env.GCLOUD_VERSION }}
            KOMPOSE_VERSION=${{ env.KOMPOSE_VERSION }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  publish_ghcr_server:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch repo
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Log in to registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1 # 65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175 # v4
        with:
          images: |
            ghcr.io/onecommons/unfurl
          # commit sha, branch name, tag name, latest on main
          tags: |
            type=sha,prefix=,suffix=-server
            type=ref,event=branch,suffix=-server
            type=ref,event=tag,suffix=-server
            type=raw,value=latest,suffix=-server,enable={{is_default_branch}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@885d1462b80bc1c1c7f0b00334ad271f09369c55 # v2

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@0a97817b6ade9f46837855d676c4cca3a2471fc9 # v4
        with:
          context: ./
          file: ./docker/Dockerfile.server
          push: true
          build-args: |
            HELM_VERSION=${{ env.HELM_VERSION }}
            TERRAFORM_VERSION=${{ env.TERRAFORM_VERSION }}
            GCLOUD_VERSION=${{ env.GCLOUD_VERSION }}
            KOMPOSE_VERSION=${{ env.KOMPOSE_VERSION }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  publish_ghcr_server_nginx:
    runs-on: ubuntu-latest
    needs: publish_ghcr_server
    steps:
      - name: Fetch repo
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Log in to registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1 # 65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175 # v4
        with:
          images: |
            ghcr.io/onecommons/unfurl
          # commit sha, branch name, tag name, latest on main
          tags: |
            type=sha,prefix=,suffix=-server-cached
            type=ref,event=branch,suffix=-server-cached
            type=ref,event=tag,suffix=-server-cached
            type=raw,value=latest,suffix=-server-cached,enable={{is_default_branch}}

      - name: Extract short sha
        id: extract
        # GH's github.sha is the full ref hash, not the short one
        run: |
          echo "sha_short=$(echo "${{ github.sha }}" | head -c 7)" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@885d1462b80bc1c1c7f0b00334ad271f09369c55 # v2

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@0a97817b6ade9f46837855d676c4cca3a2471fc9 # v4
        with:
          context: ./
          file: ./docker/Dockerfile.server-cached
          push: true
          build-args: |
            FROM_TAG=${{ steps.extract.outputs.sha_short }}-server
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
